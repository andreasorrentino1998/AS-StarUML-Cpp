{
  "id": "cpp",
  "name": "C++",
  "schema": {
    "cpp.gen": {
      "text": "C++ Code Generation",
      "type": "section"
    },
    "cpp.gen.useTab": {
      "text": "Use tab",
      "description": "Use Tab for indentation instead of spaces.",
      "type": "check",
      "default": false
    },
    "cpp.gen.indentSpaces": {
      "text": "Indent spaces",
      "description": "Number of spaces for indentation.",
      "type": "number",
      "default": 4
    },
    "cpp.gen.useLowercaseForDirectories": {
      "text": "Use lowercase for directories",
      "description": "Use lowercase for directory names.",
      "type": "check",
      "default": false
    },
    "cpp.gen.generateReturnStatement": {
      "text": "Generate return statement",
      "description": "Generate return statement inside method implementations.",
      "type": "check",
      "default": false
    },
    "cpp.gen.includeHeader": {
      "text": "Include default header",
      "description": "Include default header.",
      "type": "check",
      "default": true
    },
    "cpp.gen.useVector": {
      "text": "Use vector instead of *",
      "description": "Use vector<> instead of pointer.",
      "type": "check",
      "default": true
    },
    "cpp.gen.genCpp": {
      "text": "Generate *.cpp file",
      "description": "Generate cpp file",
      "type": "check",
      "default": true
    },
    "cpp.gen.includeCommonCppStdTypes": {
      "text": "Generate #include for common std C++ types",
      "description": "Generate the '#include' for common standard C++ types (e.g. string, vector, list, set, size_t)",
      "type": "check",
      "default": true
    },
    "cpp.gen.includeProvidedTypes": {
      "text": "Generate a comment for the provided types",
      "description": "Generate a comment for the provided types by the included C++ Standard Library.",
      "type": "check",
      "default": true
    },
    "cpp.gen.addUsingNamespaceStd": {
      "text": "Add 'using namespace std'",
      "description": "Add the 'using namespace std;' statement if required by the C++ standard types included.",
      "type": "check",
      "default": true
    },
    "cpp.gen.genDoc": {
      "text": "Generate doc comments",
      "description": "Generate doc comments",
      "type": "check",
      "default": true
    },
    "cpp.gen.genFileHeaderComment": {
      "text": "Generate file header comment",
      "description": "Generate file header comment",
      "type": "check",
      "default": true
    },
    "cpp.gen.genOldFileHeaderComment": {
      "text": "Generate the old file header comment (v.0.9.3)",
      "description": "Generate old file header comment",
      "type": "check",
      "default": false
    },
    "cpp.rev": {
      "text": "C++ Reverse Engineering",
      "type": "section"
    },
    "cpp.rev.association": {
      "text": "Association",
      "description": "Reverse C++ Fields as UML Associations.",
      "type": "check",
      "default": true
    },
    "cpp.rev.publicOnly": {
      "text": "Public members only",
      "description": "Reverse public members only.",
      "type": "check",
      "default": false
    },
    "cpp.rev.typeHierarchy": {
      "text": "Type hierarchy diagram",
      "description": "Create a type hierarchy diagram for all classes and interfaces",
      "type": "check",
      "default": true
    },
    "cpp.rev.packageOverview": {
      "text": "Package overview diagram",
      "description": "Create overview diagram for each package",
      "type": "check",
      "default": true
    },
    "cpp.rev.packageStructure": {
      "text": "Package structure diagram",
      "description": "Create a package structure diagram for all packages",
      "type": "check",
      "default": true
    }
  }
}
